{
    "project": {
        "name": "p5.play",
        "description": "A  p5.js library for games and playthings",
        "version": "1.0.0",
        "url": "http://molleindustria.org/",
        "logo": "../asterisk.png"
    },
    "files": {
        "lib/p5.play.js": {
            "name": "lib/p5.play.js",
            "modules": {
                "p5.play": 1
            },
            "classes": {
                "Sprite": 1,
                "Camera": 1,
                "Group": 1,
                "Animation": 1,
                "SpriteSheet": 1,
                "p5.CollisionShape": 1,
                "p5.PointCollider": 1,
                "p5.CircleCollider": 1,
                "p5.AxisAlignedBoundingBoxCollider": 1,
                "p5.OrientedBoundingBoxCollider": 1,
                "p5.Transform2D": 1
            },
            "fors": {
                "p5.play": 1,
                "p5.Vector": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "p5.play": {
            "name": "p5.play",
            "submodules": {},
            "elements": {},
            "classes": {
                "p5.play": 1,
                "p5.Vector": 1,
                "Sprite": 1,
                "Camera": 1,
                "Group": 1,
                "Animation": 1,
                "SpriteSheet": 1,
                "p5.CollisionShape": 1,
                "p5.PointCollider": 1,
                "p5.CircleCollider": 1,
                "p5.AxisAlignedBoundingBoxCollider": 1,
                "p5.OrientedBoundingBoxCollider": 1,
                "p5.Transform2D": 1
            },
            "fors": {
                "p5.play": 1,
                "p5.Vector": 1
            },
            "namespaces": {},
            "module": "p5.play",
            "file": "lib/p5.play.js",
            "line": 5064,
            "description": "p5.play is a library for p5.js to facilitate the creation of games and gamelike\nprojects.\n\nIt provides a flexible Sprite class to manage visual objects in 2D space\nand features such as animation support, basic collision detection\nand resolution, mouse and keyboard interactions, and a virtual camera.\n\np5.play is not a box2D-derived physics engine, it doesn't use events, and it's\ndesigned to be understood and possibly modified by intermediate programmers.\n\nSee the examples folder for more info on how to use this library.",
            "tag": "main",
            "itemtype": "main"
        }
    },
    "classes": {
        "p5.play": {
            "name": "p5.play",
            "shortname": "p5.play",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": ""
        },
        "p5.Vector": {
            "name": "p5.Vector",
            "shortname": "p5.Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": ""
        },
        "Sprite": {
            "name": "Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 760,
            "description": "A Sprite is the main building block of p5.play:\nan element able to store images or animations with a set of\nproperties such as position and visibility.\nA Sprite can have a collider that defines the active area to detect\ncollisions or overlappings with other sprites and mouse interactions.\n\nTo create a Sprite, use\n{{#crossLink \"p5.play/createSprite:method\"}}{{/crossLink}}."
        },
        "Camera": {
            "name": "Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 2385,
            "description": "A camera facilitates scrolling and zooming for scenes extending beyond\nthe canvas. A camera has a position, a zoom factor, and the mouse\ncoordinates relative to the view.\nThe camera is automatically created on the first draw cycle.\n\nIn p5.js terms the camera wraps the whole drawing cycle in a\ntransformation matrix but it can be disable anytime during the draw\ncycle for example to draw interface elements in an absolute position.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "Initial x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Initial y coordinate",
                    "type": "Number"
                },
                {
                    "name": "zoom",
                    "description": "magnification",
                    "type": "Number"
                }
            ]
        },
        "Group": {
            "name": "Group",
            "shortname": "Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 2525,
            "description": "In p5.play groups are collections of sprites with similar behavior.\nFor example a group may contain all the sprites in the background\nor all the sprites that \"kill\" the player.\n\nGroups are \"extended\" arrays and inherit all their properties\ne.g. group.length\n\nSince groups contain only references, a sprite can be in multiple\ngroups and deleting a group doesn't affect the sprites themselves.\n\nSprite.remove() will also remove the sprite from all the groups\nit belongs to.",
            "is_constructor": 1
        },
        "Animation": {
            "name": "Animation",
            "shortname": "Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 2873,
            "description": "An Animation object contains a series of images (p5.Image) that\ncan be displayed sequentially.\n\nAll files must be png images. You must include the directory from the sketch root,\nand the extension .png\n\nA sprite can have multiple labeled animations, see Sprite.addAnimation\nand Sprite.changeAnimation, however an animation can be used independently.\n\nAn animation can be created either by passing a series of file names,\nno matter how many or by passing the first and the last file name\nof a numbered sequence.\np5.play will try to detect the sequence pattern.\n\nFor example if the given filenames are\n\"data/file0001.png\" and \"data/file0005.png\" the images\n\"data/file0003.png\" and \"data/file0004.png\" will be loaded as well.",
            "example": [
                "\n    var sequenceAnimation;\n    var glitch;\n\n    function preload() {\n      sequenceAnimation = loadAnimation(\"data/walking0001.png\", \"data/walking0005.png\");\n      glitch = loadAnimation(\"data/dog.png\", \"data/horse.png\", \"data/cat.png\", \"data/snake.png\");\n    }\n\n    function setup() {\n      createCanvas(800, 600);\n    }\n\n    function draw() {\n      background(0);\n      animation(sequenceAnimation, 100, 100);\n      animation(glitch, 200, 100);\n    }"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "fileName1",
                    "description": "First file in a sequence OR first image file",
                    "type": "String"
                },
                {
                    "name": "fileName2",
                    "description": "Last file in a sequence OR second image file",
                    "type": "String"
                },
                {
                    "name": "fileNameN",
                    "description": "Any number of image files after the first two",
                    "type": "String",
                    "optional": true,
                    "multiple": true
                }
            ]
        },
        "SpriteSheet": {
            "name": "SpriteSheet",
            "shortname": "SpriteSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 3406,
            "description": "Represents a sprite sheet and all it's frames.  To be used with Animation,\nor static drawing single frames.\n\n There are two different ways to load a SpriteSheet\n\n1. Given width, height that will be used for every frame and the\n   number of frames to cycle through. The sprite sheet must have a\n   uniform grid with consistent rows and columns.\n\n2. Given an array of frame objects that define the position and\n   dimensions of each frame.  This is Flexible because you can use\n   sprite sheets that don't have uniform rows and columns.",
            "example": [
                "\n    // Method 1 - Using width, height for each frame and number of frames\n    explode_sprite_sheet = loadSpriteSheet('assets/explode_sprite_sheet.png', 171, 158, 11);\n\n    // Method 2 - Using an array of objects that define each frame\n    var player_frames = loadJSON('assets/tiles.json');\n    player_sprite_sheet = loadSpriteSheet('assets/player_spritesheet.png', player_frames);"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "String image path or p5.Image object"
                }
            ]
        },
        "p5.CollisionShape": {
            "name": "p5.CollisionShape",
            "shortname": "p5.CollisionShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 3942,
            "description": "Collision Shape Base Class\n\nWe have a set of collision shapes available that all conform to\na simple interface so that they can be checked against one another\nusing the Separating Axis Theorem.\n\nThis base class implements all the required methods for a collision\nshape and can be used as a collision point with no changes.\nOther shapes should inherit from this and override most methods.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "center",
                    "description": "(zero if omitted)",
                    "type": "p5.Vector",
                    "optional": true
                },
                {
                    "name": "rotation",
                    "description": "(zero if omitted)",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        "p5.PointCollider": {
            "name": "p5.PointCollider",
            "shortname": "p5.PointCollider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 4378,
            "description": "A point collision shape, used to detect overlap and displacement vectors\nvs other collision shapes.",
            "is_constructor": 1,
            "extends": "p5.CollisionShape",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "p5.Vector"
                }
            ]
        },
        "p5.CircleCollider": {
            "name": "p5.CircleCollider",
            "shortname": "p5.CircleCollider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 4421,
            "description": "A Circle collision shape, used to detect overlap and displacement vectors\nwith other collision shapes.",
            "is_constructor": 1,
            "extends": "p5.CollisionShape",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "p5.Vector"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "p5.AxisAlignedBoundingBoxCollider": {
            "name": "p5.AxisAlignedBoundingBoxCollider",
            "shortname": "p5.AxisAlignedBoundingBoxCollider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 4600,
            "description": "An Axis-Aligned Bounding Box (AABB) collision shape, used to detect overlap\nand compute minimum displacement vectors with other collision shapes.\n\nCannot be rotated - hence the name.  You might use this in place of an\nOBB because it simplifies some of the math and may improve performance.",
            "is_constructor": 1,
            "extends": "p5.CollisionShape",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "p5.Vector"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "p5.OrientedBoundingBoxCollider": {
            "name": "p5.OrientedBoundingBoxCollider",
            "shortname": "p5.OrientedBoundingBoxCollider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 4835,
            "description": "An Oriented Bounding Box (OBB) collision shape, used to detect overlap and\ncompute minimum displacement vectors with other collision shapes.",
            "is_constructor": 1,
            "extends": "p5.CollisionShape",
            "params": [
                {
                    "name": "center",
                    "description": "of the rectangle in world-space",
                    "type": "p5.Vector"
                },
                {
                    "name": "width",
                    "description": "of the rectangle (when not rotated)",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "of the rectangle (when not rotated)",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "about center, in radians",
                    "type": "Number"
                }
            ]
        },
        "p5.Transform2D": {
            "name": "p5.Transform2D",
            "shortname": "p5.Transform2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.play",
            "submodule": "p5.play",
            "namespace": "",
            "file": "lib/p5.play.js",
            "line": 5064,
            "description": "A 2D affine transformation (translation, rotation, scale) stored as a\n3x3 matrix that uses homogeneous coordinates.  Used to quickly transform\npoints or vectors between reference frames.",
            "is_constructor": 1,
            "extends": "Array",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "p5.Transform2D|Array.<number>",
                    "optional": true
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "lib/p5.play.js",
            "line": 42,
            "description": "The sketch camera automatically created at the beginning of a sketch.\nA camera facilitates scrolling and zooming for scenes extending beyond\nthe canvas. A camera has a position, a zoom factor, and the mouse\ncoordinates relative to the view.\n\nIn p5.js terms the camera wraps the whole drawing cycle in a\ntransformation matrix but it can be disabled anytime during the draw\ncycle, for example to draw interface elements in an absolute position.",
            "itemtype": "property",
            "name": "camera",
            "type": "{camera}",
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 142,
            "description": "Projects a vector onto the line parallel to a second vector, giving a third\nvector which is the orthogonal projection of that vector onto the line.",
            "see": [
                "https://en.wikipedia.org/wiki/Vector_projection"
            ],
            "itemtype": "method",
            "name": "project",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "- vector being projected",
                    "type": "p5.Vector"
                },
                {
                    "name": "b",
                    "description": "- vector defining the projection target line.",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "projection of a onto the line parallel to b.",
                "type": "p5.Vector"
            },
            "class": "p5.Vector",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 157,
            "description": "Ask whether a vector is parallel to this one.",
            "itemtype": "method",
            "name": "isParallel",
            "params": [
                {
                    "name": "v2",
                    "description": "",
                    "type": "p5.Vector"
                },
                {
                    "name": "tolerance",
                    "description": "- margin of error for comparisons, comes into\n       play when comparing rotated vectors.  For example, we want\n       <1, 0> to be parallel to <0, 1>.rot(Math.PI/2) but float imprecision\n       can get in the way of that.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "p5.Vector",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 183,
            "description": "A Group containing all the sprites in the sketch.",
            "itemtype": "property",
            "name": "allSprites",
            "type": "{Group}",
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 197,
            "description": "A Sprite is the main building block of p5.play:\nan element able to store images or animations with a set of\nproperties such as position and visibility.\nA Sprite can have a collider that defines the active area to detect\ncollisions or overlappings with other sprites and mouse interactions.\n\nSprites created using createSprite (the preferred way) are added to the\nallSprites group and given a depth value that puts it in front of all\nother sprites.",
            "itemtype": "method",
            "name": "createSprite",
            "params": [
                {
                    "name": "x",
                    "description": "Initial x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Initial y coordinate",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "Width of the placeholder rectangle and of the\n                      collider until an image or new collider are set",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Height of the placeholder rectangle and of the\n                      collider until an image or new collider are set",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The new sprite instance",
                "type": "Object"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 226,
            "description": "Removes a Sprite from the sketch.\nThe removed Sprite won't be drawn or updated anymore.\nEquivalent to Sprite.remove()",
            "itemtype": "method",
            "name": "removeSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite to be removed",
                    "type": "Object"
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 238,
            "description": "Updates all the sprites in the sketch (position, animation...)\nit's called automatically at every draw().\nIt can be paused by passing a parameter true or false;\nNote: it does not render the sprites.",
            "itemtype": "method",
            "name": "updateSprites",
            "params": [
                {
                    "name": "updating",
                    "description": "false to pause the update, true to resume",
                    "type": "Boolean"
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 261,
            "description": "Returns all the sprites in the sketch as an array",
            "itemtype": "method",
            "name": "getSprites",
            "return": {
                "description": "Array of Sprites",
                "type": "Array"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 292,
            "description": "Displays a Group of sprites.\nIf no parameter is specified, draws all sprites in the\nsketch.\nThe drawing order is determined by the Sprite property \"depth\"",
            "itemtype": "method",
            "name": "drawSprites",
            "params": [
                {
                    "name": "group",
                    "description": "Group of Sprites to be displayed",
                    "type": "Group",
                    "optional": true
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 313,
            "description": "Displays a Sprite.\nTo be typically used in the main draw function.",
            "itemtype": "method",
            "name": "drawSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite to be displayed",
                    "type": "Sprite"
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 325,
            "description": "Loads an animation.\nTo be typically used in the preload() function of the sketch.",
            "itemtype": "method",
            "name": "loadAnimation",
            "params": [
                {
                    "name": "sprite",
                    "description": "Sprite to be displayed",
                    "type": "Sprite"
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 336,
            "description": "Loads a Sprite Sheet.\nTo be typically used in the preload() function of the sketch.",
            "itemtype": "method",
            "name": "loadSpriteSheet",
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 346,
            "description": "Displays an animation.",
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "anim",
                    "description": "Animation to be displayed",
                    "type": "Animation"
                },
                {
                    "name": "x",
                    "description": "X coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate",
                    "type": "Number"
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 372,
            "description": "Detects if a key was pressed during the last cycle.\nIt can be used to trigger events once, when a key is pressed or released.\nExample: Super Mario jumping.",
            "itemtype": "method",
            "name": "keyWentDown",
            "params": [
                {
                    "name": "key",
                    "description": "Key code or character",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "True if the key was pressed",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 386,
            "description": "Detects if a key was released during the last cycle.\nIt can be used to trigger events once, when a key is pressed or released.\nExample: Spaceship shooting.",
            "itemtype": "method",
            "name": "keyWentUp",
            "params": [
                {
                    "name": "key",
                    "description": "Key code or character",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "True if the key was released",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 399,
            "description": "Detects if a key is currently pressed\nLike p5 keyIsDown but accepts strings and codes",
            "itemtype": "method",
            "name": "keyDown",
            "params": [
                {
                    "name": "key",
                    "description": "Key code or character",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "True if the key is down",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 411,
            "description": "Detects if a key is in the given state during the last cycle.\nHelper method encapsulating common key state logic; it may be preferable\nto call keyDown or other methods directly.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_isKeyInState",
            "params": [
                {
                    "name": "key",
                    "description": "Key code or character",
                    "type": "Number|String"
                },
                {
                    "name": "state",
                    "description": "Key state to check against",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if the key is in the given state",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 447,
            "description": "Detects if a mouse button is currently down\nCombines mouseIsPressed and mouseButton of p5",
            "itemtype": "method",
            "name": "mouseDown",
            "params": [
                {
                    "name": "buttonCode",
                    "description": "Mouse button constant LEFT, RIGHT or CENTER",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the button is down",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 459,
            "description": "Detects if a mouse button is currently up\nCombines mouseIsPressed and mouseButton of p5",
            "itemtype": "method",
            "name": "mouseUp",
            "params": [
                {
                    "name": "buttonCode",
                    "description": "Mouse button constant LEFT, RIGHT or CENTER",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the button is up",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 471,
            "description": "Detects if a mouse button was released during the last cycle.\nIt can be used to trigger events once, to be checked in the draw cycle",
            "itemtype": "method",
            "name": "mouseWentUp",
            "params": [
                {
                    "name": "buttonCode",
                    "description": "Mouse button constant LEFT, RIGHT or CENTER",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the button was just released",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 484,
            "description": "Detects if a mouse button was pressed during the last cycle.\nIt can be used to trigger events once, to be checked in the draw cycle",
            "itemtype": "method",
            "name": "mouseWentDown",
            "params": [
                {
                    "name": "buttonCode",
                    "description": "Mouse button constant LEFT, RIGHT or CENTER",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the button was just pressed",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 496,
            "description": "Detects if a mouse button is in the given state during the last cycle.\nHelper method encapsulating common mouse button state logic; it may be\npreferable to call mouseWentUp, etc, directly.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_isMouseButtonInState",
            "params": [
                {
                    "name": "buttonCode",
                    "description": "Mouse button constant LEFT, RIGHT or CENTER",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "state",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if the button was in the given state",
                "type": "Boolean"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 526,
            "description": "An object storing all useful keys for easy access\nKey.tab = 9",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "KEY",
            "type": "{Object}",
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 629,
            "description": "An object storing deprecated key aliases, which we still support but\nshould be mapped to valid aliases and generate warnings.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "KEY_DEPRECATIONS",
            "type": "{Object}",
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 642,
            "description": "Given a string key alias (as defined in the KEY property above), look up\nand return the numeric JavaScript key code for that key.  If a deprecated\nalias is passed (as defined in the KEY_DEPRECATIONS property) it will be\nmapped to a valid key code, but will also generate a warning about use\nof the deprecated alias.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_keyCodeFromAlias",
            "params": [
                {
                    "name": "alias",
                    "description": "- a case-insensitive key alias",
                    "type": "!string"
                }
            ],
            "return": {
                "description": "a numeric JavaScript key code, or undefined\n         if no key code matching the given alias is found.",
                "type": "Number|undefined"
            },
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 709,
            "description": "Turns the quadTree on or off.\nA quadtree is a data structure used to optimize collision detection.\nIt can improve performance when there is a large number of Sprites to be\nchecked continuously for overlapping.\n\np5.play will create and update a quadtree automatically.",
            "itemtype": "method",
            "name": "useQuadTree",
            "params": [
                {
                    "name": "use",
                    "description": "Pass true to enable, false to disable",
                    "type": "Boolean"
                }
            ],
            "class": "p5.play",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 823,
            "description": "The sprite's position of the sprite as a vector (x,y).",
            "itemtype": "property",
            "name": "position",
            "type": "{p5.Vector}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 830,
            "description": "The sprite's position at the beginning of the last update as a vector (x,y).",
            "itemtype": "property",
            "name": "previousPosition",
            "type": "{p5.Vector}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 848,
            "description": "The sprite's velocity as a vector (x,y)\nVelocity is speed broken down to its vertical and horizontal components.",
            "itemtype": "property",
            "name": "velocity",
            "type": "{p5.Vector}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 857,
            "description": "Set a limit to the sprite's scalar speed regardless of the direction.\nThe value can only be positive. If set to -1, there's no limit.",
            "itemtype": "property",
            "name": "maxSpeed",
            "type": "{Number}",
            "default": "-1",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 867,
            "description": "Friction factor, reduces the sprite's velocity.\nThe friction should be close to 0 (eg. 0.01)\n0: no friction\n1: full friction",
            "itemtype": "property",
            "name": "friction",
            "type": "{Number}",
            "default": "0",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 879,
            "description": "The sprite's current collider.\nIt can either be an Axis Aligned Bounding Box (a non-rotated rectangle)\nor a circular collider.\nIf the sprite is checked for collision, bounce, overlapping or mouse events the\ncollider is automatically created from the width and height\nof the sprite or from the image dimension in case of animate sprites\n\nYou can set a custom collider with Sprite.setCollider",
            "itemtype": "property",
            "name": "collider",
            "type": "{Object}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 894,
            "description": "Object containing information about the most recent collision/overlapping\nTo be typically used in combination with Sprite.overlap or Sprite.collide\nfunctions.\nThe properties are touching.left, touching.right, touching.top,\ntouching.bottom and are either true or false depending on the side of the\ncollider.",
            "itemtype": "property",
            "name": "touching",
            "type": "{Object}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 911,
            "description": "The mass determines the velocity transfer when sprites bounce\nagainst each other. See Sprite.bounce\nThe higher the mass the least the sprite will be affected by collisions.",
            "itemtype": "property",
            "name": "mass",
            "type": "{Number}",
            "default": "1",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 922,
            "description": "If set to true the sprite won't bounce or be displaced by collisions\nSimulates an infinite mass or an anchored object.",
            "itemtype": "property",
            "name": "immovable",
            "type": "{Boolean}",
            "default": "false",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 935,
            "description": "Coefficient of restitution. The velocity lost after bouncing.\n1: perfectly elastic, no energy is lost\n0: perfectly inelastic, no bouncing\nless than 1: inelastic, this is the most common in nature\ngreater than 1: hyper elastic, energy is increased like in a pinball bumper",
            "itemtype": "property",
            "name": "restitution",
            "type": "{Number}",
            "default": "1",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 948,
            "description": "Rotation in degrees of the visual element (image or animation)\nNote: this is not the movement's direction, see getDirection.",
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "default": "0",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 969,
            "description": "Internal rotation variable (expressed in degrees).\nNote: external callers access this through the rotation property above.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_rotation",
            "type": "{Number}",
            "default": "0",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 980,
            "description": "Rotation change in degrees per frame of thevisual element (image or animation)\nNote: this is not the movement's direction, see getDirection.",
            "itemtype": "property",
            "name": "rotationSpeed",
            "type": "{Number}",
            "default": "0",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 991,
            "description": "Automatically lock the rotation property of the visual element\n(image or animation) to the sprite's movement direction and vice versa.",
            "itemtype": "property",
            "name": "rotateToDirection",
            "type": "{Boolean}",
            "default": "false",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1002,
            "description": "Determines the rendering order within a group: a sprite with\nlower depth will appear below the ones with higher depth.\n\nNote: drawing a group before another with drawSprites will make\nits members appear below the second one, like in normal p5 canvas\ndrawing.",
            "itemtype": "property",
            "name": "depth",
            "type": "{Number}",
            "default": "One more than the greatest existing sprite depth, when calling\n         createSprite().  When calling new Sprite() directly, depth will\n         initialize to 0 (not recommended).",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1018,
            "description": "Determines the sprite's scale.\nExample: 2 will be twice the native size of the visuals,\n0.5 will be half. Scaling up may make images blurry.",
            "itemtype": "property",
            "name": "scale",
            "type": "{Number}",
            "default": "1",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1032,
            "description": "The sprite's visibility.",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "default": "true",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1041,
            "description": "If set to true sprite will track its mouse state.\nthe properties mouseIsPressed and mouseIsOver will be updated.\nNote: automatically set to true if the functions\nonMouseReleased or onMousePressed are set.",
            "itemtype": "property",
            "name": "mouseActive",
            "type": "{Boolean}",
            "default": "false",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1053,
            "description": "True if mouse is on the sprite's collider.\nRead only.",
            "itemtype": "property",
            "name": "mouseIsOver",
            "type": "{Boolean}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1062,
            "description": "True if mouse is pressed on the sprite's collider.\nRead only.",
            "itemtype": "property",
            "name": "mouseIsPressed",
            "type": "{Boolean}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1113,
            "description": "Width of the sprite's current image.\nIf no images or animations are set it's the width of the\nplaceholder rectangle.",
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "default": "100",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1138,
            "description": "Height of the sprite's current image.\nIf no images or animations are set it's the height of the\nplaceholder rectangle.",
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "default": "100",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1163,
            "description": "Unscaled width of the sprite\nIf no images or animations are set it's the width of the\nplaceholder rectangle.",
            "itemtype": "property",
            "name": "originalWidth",
            "type": "{Number}",
            "default": "100",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1174,
            "description": "Unscaled height of the sprite\nIf no images or animations are set it's the height of the\nplaceholder rectangle.",
            "itemtype": "property",
            "name": "originalHeight",
            "type": "{Number}",
            "default": "100",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1185,
            "description": "True if the sprite has been removed.",
            "itemtype": "property",
            "name": "removed",
            "type": "{Boolean}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1193,
            "description": "Cycles before self removal.\nSet it to initiate a countdown, every draw cycle the property is\nreduced by 1 unit. At 0 it will call a sprite.remove()\nDisabled if set to -1.",
            "itemtype": "property",
            "name": "life",
            "type": "{Number}",
            "default": "-1",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1205,
            "description": "If set to true, draws an outline of the collider, the depth, and center.",
            "itemtype": "property",
            "name": "debug",
            "type": "{Boolean}",
            "default": "false",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1214,
            "description": "If no image or animations are set this is color of the\nplaceholder rectangle",
            "itemtype": "property",
            "name": "shapeColor",
            "type": "{color}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1223,
            "description": "Groups the sprite belongs to, including allSprites",
            "itemtype": "property",
            "name": "groups",
            "type": "{Array}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1236,
            "description": "Reference to the current animation.",
            "itemtype": "property",
            "name": "animation",
            "type": "{Animation}",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1256,
            "description": "Updates the sprite.\nCalled automatically at the beginning of the draw cycle.",
            "itemtype": "method",
            "name": "update",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1344,
            "description": "Creates a default collider matching the size of the\nplaceholder rectangle or the bounding box of the image.",
            "itemtype": "method",
            "name": "setDefaultCollider",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1369,
            "description": "Updates the sprite mouse states and triggers the mouse events:\nonMouseOver, onMouseOut, onMousePressed, onMouseReleased",
            "itemtype": "method",
            "name": "mouseUpdate",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1425,
            "description": "Sets a collider for the sprite.\n\nIn p5.play a Collider is an invisible circle or rectangle\nthat can have any size or position relative to the sprite and which\nwill be used to detect collisions and overlapping with other sprites,\nor the mouse cursor.\n\nIf the sprite is checked for collision, bounce, overlapping or mouse events\na rectangle collider is automatically created from the width and height\nparameter passed at the creation of the sprite or the from the image\ndimension in case of animated sprites.\n\nOften the image bounding box is not appropriate as the active area for\ncollision detection so you can set a circular or rectangular sprite with\ndifferent dimensions and offset from the sprite's center.\n\nThere are many ways to call this method.  The first argument determines the\ntype of collider you are creating, which in turn changes the remaining\narguments.  Valid collider types are:\n\n* `point` - A point collider with no dimensions, only a position.\n\n  `setCollider(\"point\"[, offsetX, offsetY])`\n\n* `circle` - A circular collider with a set radius.\n\n  `setCollider(\"circle\"[, offsetX, offsetY[, radius])`\n\n* `rectangle` - An alias for `aabb`, below.\n\n* `aabb` - An axis-aligned bounding box - has width and height but no rotation.\n\n  `setCollider(\"aabb\"[, offsetX, offsetY[, width, height]])`\n\n* `obb` - An oriented bounding box - has width, height, and rotation.\n\n  `setCollider(\"obb\"[, offsetX, offsetY[, width, height[, rotation]]])`",
            "itemtype": "method",
            "name": "setCollider",
            "params": [
                {
                    "name": "type",
                    "description": "One of \"point\", \"circle\", \"rectangle\", \"aabb\" or \"obb\"",
                    "type": "String"
                },
                {
                    "name": "offsetX",
                    "description": "Collider x position from the center of the sprite",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "offsetY",
                    "description": "Collider y position from the center of the sprite",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "width",
                    "description": "Collider width or radius",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "height",
                    "description": "Collider height",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "rotation",
                    "description": "Collider rotation in degrees",
                    "type": "Number",
                    "optional": true
                }
            ],
            "throws": {
                "description": "if given invalid parameters.",
                "type": "TypeError"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1510,
            "description": "Sets the sprite's horizontal mirroring.\nIf 1 the images displayed normally\nIf -1 the images are flipped horizontally\nIf no argument returns the current x mirroring",
            "itemtype": "method",
            "name": "mirrorX",
            "params": [
                {
                    "name": "dir",
                    "description": "Either 1 or -1",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Current mirroring if no parameter is specified",
                "type": "Number"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1527,
            "description": "Sets the sprite's vertical mirroring.\nIf 1 the images displayed normally\nIf -1 the images are flipped vertically\nIf no argument returns the current y mirroring",
            "itemtype": "method",
            "name": "mirrorY",
            "params": [
                {
                    "name": "dir",
                    "description": "Either 1 or -1",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Current mirroring if no parameter is specified",
                "type": "Number"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1564,
            "description": "Manages the positioning, scale and rotation of the sprite\nCalled automatically, it should not be overridden",
            "access": "private",
            "tagname": "",
            "final": 1,
            "itemtype": "method",
            "name": "display",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1626,
            "description": "Manages the visuals of the sprite.\nIt can be overridden with a custom drawing function.\nThe 0,0 point will be the center of the sprite.\nExample:\nsprite.draw = function() { ellipse(0,0,10,10) }\nWill display the sprite as circle.",
            "itemtype": "method",
            "name": "draw",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1651,
            "description": "Removes the Sprite from the sketch.\nThe removed Sprite won't be drawn or updated anymore.",
            "itemtype": "method",
            "name": "remove",
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1668,
            "description": "Sets the velocity vector.",
            "itemtype": "method",
            "name": "setVelocity",
            "params": [
                {
                    "name": "x",
                    "description": "X component",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y component",
                    "type": "Number"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1680,
            "description": "Calculates the scalar speed.",
            "itemtype": "method",
            "name": "getSpeed",
            "return": {
                "description": "Scalar speed",
                "type": "Number"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1690,
            "description": "Calculates the movement's direction in degrees.",
            "itemtype": "method",
            "name": "getDirection",
            "return": {
                "description": "Angle in degrees",
                "type": "Number"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1714,
            "description": "Adds the sprite to an existing group",
            "itemtype": "method",
            "name": "addToGroup",
            "params": [
                {
                    "name": "group",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1727,
            "description": "Limits the scalar speed.",
            "itemtype": "method",
            "name": "limitSpeed",
            "params": [
                {
                    "name": "max",
                    "description": "Max speed: positive number",
                    "type": "Number"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1747,
            "description": "Set the speed and direction of the sprite.\nThe action overwrites the current velocity.\nIf direction is not supplied, the current direction is maintained.\nIf direction is not supplied and there is no current velocity, the current\nrotation angle used for the direction.",
            "itemtype": "method",
            "name": "setSpeed",
            "params": [
                {
                    "name": "speed",
                    "description": "Scalar speed",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "Direction in degrees",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1781,
            "description": "Pushes the sprite in a direction defined by an angle.\nThe force is added to the current velocity.",
            "itemtype": "method",
            "name": "addSpeed",
            "params": [
                {
                    "name": "speed",
                    "description": "Scalar speed to add",
                    "type": "Number"
                },
                {
                    "name": "angle",
                    "description": "Direction in degrees",
                    "type": "Number"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1800,
            "description": "Pushes the sprite toward a point.\nThe force is added to the current velocity.",
            "itemtype": "method",
            "name": "attractionPoint",
            "params": [
                {
                    "name": "magnitude",
                    "description": "Scalar speed to add",
                    "type": "Number"
                },
                {
                    "name": "pointX",
                    "description": "Direction x coordinate",
                    "type": "Number"
                },
                {
                    "name": "pointY",
                    "description": "Direction y coordinate",
                    "type": "Number"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1816,
            "description": "Adds an image to the sprite.\nAn image will be considered a one-frame animation.\nThe image should be preloaded in the preload() function using p5 loadImage.\nAnimations require a identifying label (string) to change them.\nThe image is stored in the sprite but not necessarily displayed\nuntil Sprite.changeAnimation(label) is called\n\nUsages:\n- sprite.addImage(label, image);\n- sprite.addImage(image);\n\nIf only an image is passed no label is specified",
            "itemtype": "method",
            "name": "addImage",
            "params": [
                {
                    "name": "label",
                    "description": "Label or image",
                    "type": "String|p5.Image"
                },
                {
                    "name": "img",
                    "description": "Image",
                    "type": "p5.Image",
                    "optional": true
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1844,
            "description": "Adds an animation to the sprite.\nThe animation should be preloaded in the preload() function\nusing loadAnimation.\nAnimations require a identifying label (string) to change them.\nAnimations are stored in the sprite but not necessarily displayed\nuntil Sprite.changeAnimation(label) is called.\n\nUsage:\n- sprite.addAnimation(label, animation);\n\nAlternative usages. See Animation for more information on file sequences:\n- sprite.addAnimation(label, firstFrame, lastFrame);\n- sprite.addAnimation(label, frame1, frame2, frame3...);",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "label",
                    "description": "Animation identifier",
                    "type": "String"
                },
                {
                    "name": "animation",
                    "description": "The preloaded animation",
                    "type": "Animation"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1923,
            "description": "Changes the displayed image/animation.\nEquivalent to changeAnimation",
            "itemtype": "method",
            "name": "changeImage",
            "params": [
                {
                    "name": "label",
                    "description": "Image/Animation identifier",
                    "type": "String"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1934,
            "description": "Returns the label of the current animation",
            "itemtype": "method",
            "name": "getAnimationLabel",
            "return": {
                "description": "label Image/Animation identifier",
                "type": "String"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1944,
            "description": "Changes the displayed animation.\nSee Animation for more control over the sequence.",
            "itemtype": "method",
            "name": "changeAnimation",
            "params": [
                {
                    "name": "label",
                    "description": "Animation identifier",
                    "type": "String"
                }
            ],
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1961,
            "description": "Checks if the given point corresponds to a transparent pixel\nin the sprite's current image. It can be used to check a point collision\nagainst only the visible part of the sprite.",
            "itemtype": "method",
            "name": "overlapPixel",
            "params": [
                {
                    "name": "pointX",
                    "description": "x coordinate of the point to check",
                    "type": "Number"
                },
                {
                    "name": "pointY",
                    "description": "y coordinate of the point to check",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "result True if non-transparent",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 1997,
            "description": "Checks if the given point is inside the sprite's collider.",
            "itemtype": "method",
            "name": "overlapPoint",
            "params": [
                {
                    "name": "pointX",
                    "description": "x coordinate of the point to check",
                    "type": "Number"
                },
                {
                    "name": "pointY",
                    "description": "y coordinate of the point to check",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "result True if inside",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2017,
            "description": "Checks if the the sprite is overlapping another sprite or a group.\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the overlap occours.\nIf the target is a group the function will be called for each single\nsprite overlapping. The parameter of the function are respectively the\ncurrent sprite and the colliding sprite.",
            "example": [
                "\n    sprite.overlap(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "overlap",
            "params": [
                {
                    "name": "target",
                    "description": "Sprite or group to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2045,
            "description": "Checks if the the sprite is overlapping another sprite or a group.\nIf the overlap is positive the current sprite will be displace by\nthe colliding one in the closest non-overlapping position.\n\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the collision occours.\nIf the target is a group the function will be called for each single\nsprite colliding. The parameter of the function are respectively the\ncurrent sprite and the colliding sprite.",
            "example": [
                "\n    sprite.collide(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "collide",
            "params": [
                {
                    "name": "target",
                    "description": "Sprite or group to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2076,
            "description": "Checks if the the sprite is overlapping another sprite or a group.\nIf the overlap is positive the current sprite will displace\nthe colliding one to the closest non-overlapping position.\n\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the collision occours.\nIf the target is a group the function will be called for each single\nsprite colliding. The parameter of the function are respectively the\ncurrent sprite and the colliding sprite.",
            "example": [
                "\n    sprite.displace(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "displace",
            "params": [
                {
                    "name": "target",
                    "description": "Sprite or group to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2107,
            "description": "Checks if the the sprite is overlapping another sprite or a group.\nIf the overlap is positive the sprites will bounce affecting each\nother's trajectories depending on their .velocity, .mass and .restitution\n\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the collision occours.\nIf the target is a group the function will be called for each single\nsprite colliding. The parameter of the function are respectively the\ncurrent sprite and the colliding sprite.",
            "example": [
                "\n    sprite.bounce(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "bounce",
            "params": [
                {
                    "name": "target",
                    "description": "Sprite or group to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2138,
            "description": "Internal collision detection function. Do not use directly.\n\nHandles collision with individual sprites or with groups, using the\nquadtree to optimize the latter.",
            "itemtype": "method",
            "name": "_collideWith",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "- 'overlap', 'displace', 'collide' or 'bounce'",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "Sprite|Group"
                },
                {
                    "name": "callback",
                    "description": "- if collision occurred",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "true if a collision occurred",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2183,
            "description": "Helper collision method for colliding this sprite with one other sprite.\n\nHas the side effect of setting this.touching properties to TRUE if collisions\noccur.",
            "itemtype": "method",
            "name": "_collideWithOne",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "- 'overlap', 'displace', 'collide' or 'bounce'",
                    "type": "String"
                },
                {
                    "name": "other",
                    "description": "",
                    "type": "Sprite"
                },
                {
                    "name": "callback",
                    "description": "- if collision occurred",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "true if a collision occurred",
                "type": "Boolean"
            },
            "class": "Sprite",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2402,
            "description": "Camera position. Defines the global offset of the sketch.",
            "itemtype": "property",
            "name": "position",
            "type": "{p5.Vector}",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2410,
            "description": "Camera zoom. Defines the global scale of the sketch.\nA scale of 1 will be the normal size. Setting it to 2 will make everything\ntwice the size. .5 will make everything half size.",
            "itemtype": "property",
            "name": "zoom",
            "type": "{Number}",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2420,
            "description": "MouseX translated to the camera view.\nOffsetting and scaling the canvas will not change the sprites' position\nnor the mouseX and mouseY variables. Use this property to read the mouse\nposition if the camera moved or zoomed.",
            "itemtype": "property",
            "name": "mouseX",
            "type": "{Number}",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2431,
            "description": "MouseY translated to the camera view.\nOffsetting and scaling the canvas will not change the sprites' position\nnor the mouseX and mouseY variables. Use this property to read the mouse\nposition if the camera moved or zoomed.",
            "itemtype": "property",
            "name": "mouseY",
            "type": "{Number}",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2442,
            "description": "True if the camera is active.\nRead only property. Use the methods Camera.on() and Camera.off()\nto enable or disable the camera.",
            "itemtype": "property",
            "name": "active",
            "type": "{Boolean}",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2452,
            "description": "Activates the camera.\nThe canvas will be drawn according to the camera position and scale until\nCamera.off() is called",
            "itemtype": "method",
            "name": "on",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2467,
            "description": "Deactivates the camera.\nThe canvas will be drawn normally, ignoring the camera's position\nand scale until Camera.on() is called",
            "itemtype": "method",
            "name": "off",
            "class": "Camera",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2547,
            "description": "Gets the member at index i.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "i",
                    "description": "The index of the object to retrieve",
                    "type": "Number"
                }
            ],
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2557,
            "description": "Checks if the group contains a sprite.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite to search",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "Index or -1 if not found",
                "type": "Number"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2568,
            "description": "Same as Group.contains",
            "itemtype": "method",
            "name": "indexOf",
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2581,
            "description": "Adds a sprite to the group.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "s",
                    "description": "The sprite to be added",
                    "type": "Sprite"
                }
            ],
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2598,
            "description": "Same as group.length",
            "itemtype": "method",
            "name": "size",
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2606,
            "description": "Removes all the sprites in the group\nfrom the scene.",
            "itemtype": "method",
            "name": "removeSprites",
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2618,
            "description": "Removes all references to the group.\nDoes not remove the actual sprites.",
            "itemtype": "method",
            "name": "clear",
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2628,
            "description": "Removes a sprite from the group.\nDoes not remove the actual sprite, only the affiliation (reference).",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "item",
                    "description": "The sprite to be removed",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": "True if sprite was found and removed",
                "type": "Boolean"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2660,
            "description": "Returns a copy of the group as standard array.",
            "itemtype": "method",
            "name": "toArray",
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2668,
            "description": "Returns the highest depth in a group",
            "itemtype": "method",
            "name": "maxDepth",
            "return": {
                "description": "The depth of the sprite drawn on the top",
                "type": "Number"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2684,
            "description": "Returns the lowest depth in a group",
            "itemtype": "method",
            "name": "minDepth",
            "return": {
                "description": "The depth of the sprite drawn on the bottom",
                "type": "Number"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2700,
            "description": "Draws all the sprites in the group.",
            "itemtype": "method",
            "name": "draw",
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2735,
            "description": "Collide each member of group against the target using the given collision\ntype.  Return true if any collision occurred.\nInternal use",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_groupCollide",
            "params": [
                {
                    "name": "type",
                    "description": "one of 'overlap', 'collide', 'displace', 'bounce'",
                    "type": "!string"
                },
                {
                    "name": "target",
                    "description": "Group or Sprite",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "on collision.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if any collision/overlap occurred",
                "type": "Boolean"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2754,
            "description": "Checks if the the group is overlapping another group or sprite.\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the overlap occurs.\nThe function will be called for each single sprite overlapping.\nThe parameter of the function are respectively the\nmember of the current group and the other sprite passed as parameter.",
            "example": [
                "\n    group.overlap(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "overlap",
            "params": [
                {
                    "name": "target",
                    "description": "Group or Sprite to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2781,
            "description": "Checks if the the group is overlapping another group or sprite.\nIf the overlap is positive the sprites in the group will be displaced\nby the colliding one to the closest non-overlapping positions.\n\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the overlap occours.\nThe function will be called for each single sprite overlapping.\nThe parameter of the function are respectively the\nmember of the current group and the other sprite passed as parameter.",
            "example": [
                "\n    group.collide(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "collide",
            "params": [
                {
                    "name": "target",
                    "description": "Group or Sprite to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2810,
            "description": "Checks if the the group is overlapping another group or sprite.\nIf the overlap is positive the sprites in the group will displace\nthe colliding ones to the closest non-overlapping positions.\n\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the overlap occurs.\nThe function will be called for each single sprite overlapping.\nThe parameter of the function are respectively the\nmember of the current group and the other sprite passed as parameter.",
            "example": [
                "\n    group.displace(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "displace",
            "params": [
                {
                    "name": "target",
                    "description": "Group or Sprite to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2839,
            "description": "Checks if the the group is overlapping another group or sprite.\nIf the overlap is positive the sprites will bounce affecting each\nother's trajectories depending on their .velocity, .mass and .restitution.\n\nThe check is performed using the colliders. If colliders are not set\nthey will be created automatically from the image/animation bounding box.\n\nA callback function can be specified to perform additional operations\nwhen the overlap occours.\nThe function will be called for each single sprite overlapping.\nThe parameter of the function are respectively the\nmember of the current group and the other sprite passed as parameter.",
            "example": [
                "\n    group.bounce(otherSprite, explosion);\n\n    function explosion(spriteA, spriteB) {\n      spriteA.remove();\n      spriteB.score++;\n    }"
            ],
            "itemtype": "method",
            "name": "bounce",
            "params": [
                {
                    "name": "target",
                    "description": "Group or Sprite to check against the current one",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to be called if overlap is positive",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if overlapping",
                "type": "Boolean"
            },
            "class": "Group",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2923,
            "description": "Array of frames (p5.Image)",
            "itemtype": "property",
            "name": "images",
            "type": "{Array}",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2938,
            "description": "Delay between frames in number of draw cycles.\nIf set to 4 the framerate of the anymation would be the\nsketch framerate divided by 4 (60fps = 15fps)",
            "itemtype": "property",
            "name": "frameDelay",
            "type": "{Number}",
            "default": "2",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2949,
            "description": "True if the animation is currently playing.",
            "itemtype": "property",
            "name": "playing",
            "type": "{Boolean}",
            "default": "true",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2958,
            "description": "Animation visibility.",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "default": "true",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2967,
            "description": "If set to false the animation will stop after reaching the last frame",
            "itemtype": "property",
            "name": "looping",
            "type": "{Boolean}",
            "default": "true",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 2976,
            "description": "True if frame changed during the last draw cycle",
            "itemtype": "property",
            "name": "frameChanged",
            "type": "{Boolean}",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3107,
            "description": "Objects are passed by reference so to have different sprites\nusing the same animation you need to clone it.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current animation",
                "type": "Animation"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3132,
            "description": "Draws the animation at coordinate x and y.\nUpdates the frames automatically.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "x",
                    "description": "x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y coordinate",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "rotation",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3235,
            "description": "Plays the animation.",
            "itemtype": "method",
            "name": "play",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3245,
            "description": "Stops the animation.",
            "itemtype": "method",
            "name": "stop",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3254,
            "description": "Rewinds the animation to the first frame.",
            "itemtype": "method",
            "name": "rewind",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3263,
            "description": "Changes the current frame.",
            "itemtype": "method",
            "name": "changeFrame",
            "params": [
                {
                    "name": "frame",
                    "description": "Frame number (starts from 0).",
                    "type": "Number"
                }
            ],
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3279,
            "description": "Goes to the next frame and stops.",
            "itemtype": "method",
            "name": "nextFrame",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3295,
            "description": "Goes to the previous frame and stops.",
            "itemtype": "method",
            "name": "previousFrame",
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3311,
            "description": "Plays the animation forward or backward toward a target frame.",
            "itemtype": "method",
            "name": "goToFrame",
            "params": [
                {
                    "name": "toFrame",
                    "description": "Frame number destination (starts from 0)",
                    "type": "Number"
                }
            ],
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3331,
            "description": "Returns the current frame number.",
            "itemtype": "method",
            "name": "getFrame",
            "return": {
                "description": "Current frame (starts from 0)",
                "type": "Number"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3341,
            "description": "Returns the last frame number.",
            "itemtype": "method",
            "name": "getLastFrame",
            "return": {
                "description": "Last frame number (starts from 0)",
                "type": "Number"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3351,
            "description": "Returns the current frame image as p5.Image.",
            "itemtype": "method",
            "name": "getFrameImage",
            "return": {
                "description": "Current frame image",
                "type": "p5.Image"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3361,
            "description": "Returns the frame image at the specified frame number.",
            "itemtype": "method",
            "name": "getImageAt",
            "params": [
                {
                    "name": "frame",
                    "description": "Frame number",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Frame image",
                "type": "p5.Image"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3372,
            "description": "Returns the current frame width in pixels.\nIf there is no image loaded, returns 1.",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "Frame width",
                "type": "Number"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3387,
            "description": "Returns the current frame height in pixels.\nIf there is no image loaded, returns 1.",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "Frame height",
                "type": "Number"
            },
            "class": "Animation",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3441,
            "description": "Generate the frames data for this sprite sheet baesd on user params",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_generateSheetFrames",
            "class": "SpriteSheet",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3495,
            "description": "Draws a specific frame to the canvas.",
            "params": [
                {
                    "name": "frame_name",
                    "description": "Can either be a string name, or a numeric index."
                },
                {
                    "name": "x",
                    "description": "x position to draw the frame at"
                },
                {
                    "name": "y",
                    "description": "y position to draw the frame at"
                },
                {
                    "name": "width",
                    "description": "optional width to draw the frame",
                    "optional": true
                },
                {
                    "name": "height",
                    "description": "optional height to draw the frame",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "drawFrame",
            "class": "SpriteSheet",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3522,
            "description": "Objects are passed by reference so to have different sprites\nusing the same animation you need to clone it.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "A clone of the current SpriteSheet",
                "type": "SpriteSheet"
            },
            "class": "SpriteSheet",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3918,
            "description": "Log a warning message to the host console, using native `console.warn`\nif it is available but falling back on `console.log` if not.  If no\nconsole is available, this method will fail silently.",
            "itemtype": "method",
            "name": "_warn",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "!string"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "SpriteSheet",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3959,
            "description": "Transform of this shape relative to its parent.  If there is no parent,\nthis is pretty much the world-space transform.\nThis should stay consistent with _offset, _rotation and _scale properties.",
            "itemtype": "property",
            "name": "_localTransform",
            "type": "{p5.Transform2D}",
            "access": "protected",
            "tagname": "",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3975,
            "description": "Transform of whatever parent object (probably a sprite) this shape is\nassociated with.  If this is a free-floating shape, the parent transform\nwill remain an identity matrix.",
            "itemtype": "property",
            "name": "_parentTransform",
            "type": "{p5.Transform2D}",
            "access": "protected",
            "tagname": "",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3985,
            "description": "The center of the collision shape in world-space.",
            "itemtype": "property",
            "name": "_center",
            "access": "private",
            "tagname": "",
            "type": "{p5.Vector}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 3993,
            "description": "The center of the collision shape in local-space; also, the offset of the\ncollision shape's center from its parent sprite's center.",
            "itemtype": "property",
            "name": "_offset",
            "type": "{p5.Vector}",
            "access": "private",
            "tagname": "",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4002,
            "description": "Rotation in radians in local space (relative to parent).\nNote that this will only be meaningful for shapes that can rotate,\ni.e. Oriented Bounding Boxes",
            "itemtype": "property",
            "name": "_rotation",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4012,
            "description": "Scale X and Y in local space.  Note that this will only be meaningful\nfor shapes that have dimensions (e.g. not for point colliders)",
            "itemtype": "property",
            "name": "_scale",
            "type": "{p5.Vector}",
            "access": "private",
            "tagname": "",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4021,
            "description": "If true, when calling `updateFromSprite` this collider will adopt the\nbase dimensions of the sprite in addition to adopting its transform.\nIf false, only the transform (position/rotation/scale) will be adopted.",
            "itemtype": "property",
            "name": "getsDimensionsFromSprite",
            "type": "{boolean}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4033,
            "description": "The center of the collision shape in world-space.\nNote: You can set this property with a value in world-space, but it will\nactually modify the collision shape's local transform.",
            "itemtype": "property",
            "name": "center",
            "type": "{p5.Vector}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4053,
            "description": "The center of the collision shape in local-space - if this collider is\nowned by a sprite, the offset of the collider center from the sprite center.",
            "itemtype": "property",
            "name": "offset",
            "type": "{p5.Vector}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4072,
            "description": "The local-space rotation of the collider, in radians.",
            "itemtype": "property",
            "name": "rotation",
            "type": "{number}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4092,
            "description": "The local-space scale of the collider",
            "itemtype": "property",
            "name": "scale",
            "type": "{p5.Vector}",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4116,
            "description": "Update this collider based on the properties of a parent Sprite.\nDescendant classes should override this method to adopt the dimensions\nof the sprite if `getsDimensionsFromSprite` is true.",
            "itemtype": "method",
            "name": "updateFromSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "see": [
                "p5.CollisionShape.prototype.getsDimensionsFromSprite"
            ],
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4128,
            "description": "Update this collider's parent transform, which will in turn adjust its\nposition, rotation and scale in world-space and recompute cached values\nif necessary.\nIf a Sprite is passed as the 'parent' then a new transform will be computed\nfrom the sprite's position/rotation/scale and used.",
            "itemtype": "method",
            "name": "setParentTransform",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "p5.Transform2D|Sprite"
                }
            ],
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4152,
            "description": "Recalculate cached properties, relevant vectors, etc. when at least one\nof the shape's transforms changes.  The base CollisionShape (and PointCollider)\nonly need to recompute the shape's center, but other shapes may need to\noverride this method and do additional recomputation.",
            "itemtype": "method",
            "name": "_onTransformChanged",
            "access": "protected",
            "tagname": "",
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4180,
            "description": "Compute the smallest movement needed to move this collision shape out of\nanother collision shape.  If the shapes are not overlapping, returns a\nzero vector to indicate that no displacement is necessary.",
            "itemtype": "method",
            "name": "collide",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "p5.CollisionShape"
                }
            ],
            "return": {
                "description": "",
                "type": "p5.Vector"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4253,
            "description": "Check whether this shape overlaps another.",
            "itemtype": "method",
            "name": "overlap",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "p5.CollisionShape"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4264,
            "itemtype": "method",
            "name": "_getCanididateAxesForShapes",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "shape1",
                    "description": "",
                    "type": "p5.CollisionShape"
                },
                {
                    "name": "shape2",
                    "description": "",
                    "type": "p5.CollisionShape"
                }
            ],
            "return": {
                "description": "",
                "type": "Array.<p5.Vector>"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4298,
            "description": "Compute candidate separating axes relative to another object.\nOverride this method in subclasses to implement collision behavior.",
            "itemtype": "method",
            "name": "_getCandidateAxes",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array.<p5.Vector>"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4309,
            "description": "Get this shape's radius (half-width of its projection) along the given axis.\nOverride this method in subclasses to implement collision behavior.",
            "itemtype": "method",
            "name": "_getRadiusOnAxis",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4321,
            "description": "Get the shape's minimum radius on any axis for tunneling checks.",
            "itemtype": "method",
            "name": "_getMinRadius",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4332,
            "itemtype": "property",
            "name": "X_AXIS",
            "type": "{p5.Vector}",
            "static": 1,
            "final": 1,
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4340,
            "itemtype": "property",
            "name": "Y_AXIS",
            "type": "{p5.Vector}",
            "static": 1,
            "final": 1,
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4348,
            "itemtype": "property",
            "name": "WORLD_AXES",
            "type": "{Array.<p5.Vector>}",
            "static": 1,
            "final": 1,
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4359,
            "description": "Get world-space axis-aligned bounds information for this collision shape.\nUsed primarily for the quadtree.",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "}",
                "type": "Top: number, bottom: number, left: number, right: number, width: number, height: number"
            },
            "class": "p5.CollisionShape",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4391,
            "description": "Construct a new PointCollider with given offset for the given sprite.",
            "itemtype": "method",
            "name": "createFromSprite",
            "static": 1,
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                },
                {
                    "name": "offset",
                    "description": "from the sprite's center",
                    "type": "p5.Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "p5.PointCollider"
            },
            "class": "p5.PointCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4406,
            "description": "Debug-draw this point collider",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "sketch",
                    "description": "instance to use for drawing",
                    "type": "P5"
                }
            ],
            "class": "p5.PointCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4433,
            "description": "The unscaled radius of the circle collider.",
            "itemtype": "property",
            "name": "radius",
            "type": "{number}",
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4440,
            "description": "Final radius of this circle after being scaled by parent and local transforms,\ncached so we don't recalculate it all the time.",
            "itemtype": "property",
            "name": "_scaledRadius",
            "type": "{number}",
            "access": "private",
            "tagname": "",
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4453,
            "description": "Construct a new CircleCollider with given offset for the given sprite.",
            "itemtype": "method",
            "name": "createFromSprite",
            "static": 1,
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                },
                {
                    "name": "offset",
                    "description": "from the sprite's center",
                    "type": "p5.Vector",
                    "optional": true
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "p5.CircleCollider"
            },
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4473,
            "description": "Update this collider based on the properties of a parent Sprite.",
            "itemtype": "method",
            "name": "updateFromSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "see": [
                "p5.CollisionShape.prototype.getsDimensionsFromSprite"
            ],
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4490,
            "description": "Recalculate cached properties, relevant vectors, etc. when at least one\nof the shape's transforms changes.  The base CollisionShape (and PointCollider)\nonly need to recompute the shape's center, but other shapes may need to\noverride this method and do additional recomputation.",
            "itemtype": "method",
            "name": "_onTransformChanged",
            "access": "protected",
            "tagname": "",
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4503,
            "description": "Call to update the cached scaled radius value.",
            "itemtype": "method",
            "name": "_computeScaledRadius",
            "access": "private",
            "tagname": "",
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4516,
            "description": "Debug-draw this collision shape.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "sketch",
                    "description": "instance to use for drawing",
                    "type": "P5"
                }
            ],
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4530,
            "description": "Compute candidate separating axes relative to another object.",
            "itemtype": "method",
            "name": "_getCandidateAxes",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "p5.CollisionShape"
                }
            ],
            "return": {
                "description": "",
                "type": "Array.<p5.Vector>"
            },
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4579,
            "description": "Get this shape's radius (half-width of its projection) along the given axis.",
            "itemtype": "method",
            "name": "_getRadiusOnAxis",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4589,
            "description": "Get the shape's minimum radius on any axis for tunneling checks.",
            "itemtype": "method",
            "name": "_getMinRadius",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.CircleCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4617,
            "description": "Unscaled box width.",
            "itemtype": "property",
            "name": "_width",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4625,
            "description": "Unscaled box height.",
            "itemtype": "property",
            "name": "_width",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4633,
            "description": "Cached half-diagonals, used for computing a projected radius.\nAlready transformed into world-space.",
            "itemtype": "property",
            "name": "_halfDiagonals",
            "access": "private",
            "tagname": "",
            "type": "{Array.<p5.Vector>}",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4644,
            "description": "The untransformed width of the box collider.\nRecomputes diagonals when set.",
            "itemtype": "property",
            "name": "width",
            "type": "{number}",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4661,
            "description": "The unrotated height of the box collider.\nRecomputes diagonals when set.",
            "itemtype": "property",
            "name": "height",
            "type": "{number}",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4678,
            "description": "Two vectors representing adjacent half-diagonals of the box at its\ncurrent dimensions and orientation.",
            "itemtype": "property",
            "name": "halfDiagonals",
            "readonly": "",
            "type": "{Array.<p5.Vector>}",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4697,
            "description": "Construct a new AxisAlignedBoundingBoxCollider with given offset for the given sprite.",
            "itemtype": "method",
            "name": "createFromSprite",
            "static": 1,
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                },
                {
                    "name": "offset",
                    "description": "from the sprite's center",
                    "type": "p5.Vector",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "p5.CircleCollider"
            },
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4717,
            "description": "Update this collider based on the properties of a parent Sprite.",
            "itemtype": "method",
            "name": "updateFromSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "see": [
                "p5.CollisionShape.prototype.getsDimensionsFromSprite"
            ],
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4736,
            "description": "Recalculate cached properties, relevant vectors, etc. when at least one\nof the shape's transforms changes.  The base CollisionShape (and PointCollider)\nonly need to recompute the shape's center, but other shapes may need to\noverride this method and do additional recomputation.",
            "itemtype": "method",
            "name": "_onTransformChanged",
            "access": "protected",
            "tagname": "",
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4749,
            "description": "Recompute this bounding box's half-diagonal vectors.",
            "itemtype": "method",
            "name": "_computeHalfDiagonals",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array.<p5.Vector>"
            },
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4782,
            "description": "Debug-draw this collider.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "sketch",
                    "description": "- p5 instance to use for drawing",
                    "type": "P5"
                }
            ],
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4798,
            "description": "Compute candidate separating axes relative to another object.",
            "itemtype": "method",
            "name": "_getCandidateAxes",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array.<p5.Vector>"
            },
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4808,
            "description": "Get this shape's radius (half-width of its projection) along the given axis.",
            "itemtype": "method",
            "name": "_getRadiusOnAxis",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4824,
            "description": "Get the shape's minimum radius on any axis for tunneling checks.",
            "itemtype": "method",
            "name": "_getMinRadius",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.AxisAlignedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4849,
            "description": "Unscaled box width.",
            "itemtype": "property",
            "name": "_width",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4857,
            "description": "Unscaled box height.",
            "itemtype": "property",
            "name": "_width",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4865,
            "description": "Cached separating axes this shape contributes to a collision.",
            "itemtype": "property",
            "name": "_potentialAxes",
            "access": "private",
            "tagname": "",
            "type": "{Array.<p5.Vector>}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4873,
            "description": "Cached half-diagonals, used for computing a projected radius.\nAlready transformed into world-space.",
            "itemtype": "property",
            "name": "_halfDiagonals",
            "access": "private",
            "tagname": "",
            "type": "{Array.<p5.Vector>}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4884,
            "description": "The unrotated width of the box collider.\nRecomputes diagonals when set.",
            "itemtype": "property",
            "name": "width",
            "type": "{number}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4901,
            "description": "The unrotated height of the box collider.\nRecomputes diagonals when set.",
            "itemtype": "property",
            "name": "height",
            "type": "{number}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4918,
            "description": "Two vectors representing adjacent half-diagonals of the box at its\ncurrent dimensions and orientation.",
            "itemtype": "property",
            "name": "halfDiagonals",
            "readonly": "",
            "type": "{Array.<p5.Vector>}",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4937,
            "description": "Construct a new AxisAlignedBoundingBoxCollider with given offset for the given sprite.",
            "itemtype": "method",
            "name": "createFromSprite",
            "static": 1,
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                },
                {
                    "name": "offset",
                    "description": "from the sprite's center",
                    "type": "p5.Vector",
                    "optional": true
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "rotation",
                    "description": "in radians",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "p5.CircleCollider"
            },
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4961,
            "description": "Update this collider based on the properties of a parent Sprite.",
            "itemtype": "method",
            "name": "updateFromSprite",
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Sprite"
                }
            ],
            "see": [
                "p5.CollisionShape.prototype.getsDimensionsFromSprite"
            ],
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 4970,
            "description": "Recalculate cached properties, relevant vectors, etc. when at least one\nof the shape's transforms changes.  The base CollisionShape (and PointCollider)\nonly need to recompute the shape's center, but other shapes may need to\noverride this method and do additional recomputation.",
            "itemtype": "method",
            "name": "_onTransformChanged",
            "access": "protected",
            "tagname": "",
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5003,
            "description": "Debug-draw this collider.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "sketch",
                    "description": "- p5 instance to use for drawing",
                    "type": "P5"
                }
            ],
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5029,
            "description": "Compute candidate separating axes relative to another object.",
            "itemtype": "method",
            "name": "_getCandidateAxes",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array.<p5.Vector>"
            },
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5041,
            "description": "Get this shape's radius (half-width of its projection) along the given axis.",
            "itemtype": "method",
            "name": "_getRadiusOnAxis",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5053,
            "description": "When checking for tunneling through a OrientedBoundingBoxCollider use a\nworst-case of zero (e.g. if the other sprite is passing through a corner).",
            "itemtype": "method",
            "name": "_getMinRadius",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "p5.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.OrientedBoundingBoxCollider",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5091,
            "description": "Reset this transform to an identity transform, in-place.",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "this transform",
                "type": "p5.Transform2D"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5106,
            "description": "Make a copy of this transform.",
            "itemtype": "method",
            "name": "copy",
            "return": {
                "description": "",
                "type": "p5.Transform2D"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5115,
            "description": "Check whether two transforms are the same.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "p5.Transform2D|Array.<number>"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5134,
            "description": "Multiply two transforms together, combining them.\nDoes not modify original transforms.  Assigns result into dest argument if\nprovided and returns it.  Otherwise returns a new transform.",
            "itemtype": "method",
            "name": "mult",
            "static": 1,
            "params": [
                {
                    "name": "t1",
                    "description": "",
                    "type": "p5.Transform2D|Array.<number>"
                },
                {
                    "name": "t2",
                    "description": "",
                    "type": "p5.Transform2D|Array.<number>"
                },
                {
                    "name": "dest",
                    "description": "",
                    "type": "p5.Transform2D",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "p5.Transform2D"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5177,
            "description": "Multiply this transform by another, combining them.\nModifies this transform and returns it.",
            "itemtype": "method",
            "name": "mult",
            "params": [
                {
                    "name": "other",
                    "description": "",
                    "type": "p5.Transform2D|Float32Array|Array.<number>"
                }
            ],
            "return": {
                "description": "",
                "type": "p5.Transform2D"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5188,
            "description": "Modify this transform, translating it by a certain amount.\nReturns this transform.",
            "itemtype": "method",
            "name": "translate",
            "return": {
                "description": "",
                "type": "p5.Transform2D"
            },
            "example": [
                "\n    // Two different ways to call this method.\n    var t = new p5.Transform();\n    // 1. Two numbers\n    t.translate(x, y);\n    // 2. One vector\n    t.translate(new p5.Vector(x, y));"
            ],
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5222,
            "description": "Retrieve the resolved translation of this transform.",
            "itemtype": "method",
            "name": "getTranslation",
            "return": {
                "description": "",
                "type": "p5.Vector"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5231,
            "description": "Modify this transform, scaling it by a certain amount.\nReturns this transform.",
            "itemtype": "method",
            "name": "scale",
            "return": {
                "description": "",
                "type": "p5.Transform2D"
            },
            "example": [
                "\n    // Three different ways to call this method.\n    var t = new p5.Transform();\n    // 1. One scalar value\n    t.scale(uniformScale);\n    // 1. Two scalar values\n    t.scale(scaleX, scaleY);\n    // 2. One vector\n    t.translate(new p5.Vector(scaleX, scaleY));"
            ],
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5266,
            "description": "Retrieve the scale vector of this transform.",
            "itemtype": "method",
            "name": "getScale",
            "return": {
                "description": "",
                "type": "p5.Vector"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5291,
            "description": "Modify this transform, rotating it by a certain amount.",
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "p5.Transform2D"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5310,
            "description": "Retrieve the angle of this transform in radians.",
            "itemtype": "method",
            "name": "getRotation",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "p5.Transform2D",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5320,
            "description": "Applies a 2D transformation matrix (using homogeneous coordinates, so 3x3)\nto a Vector2 (<x, y, 1>) and returns a new vector2.",
            "itemtype": "method",
            "name": "transform",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "p5.Vector"
                },
                {
                    "name": "t",
                    "description": "",
                    "type": "p5.Transform2D"
                }
            ],
            "return": {
                "description": "a new vector",
                "type": "p5.Vector"
            },
            "class": "p5.Vector",
            "module": "p5.play",
            "submodule": "p5.play"
        },
        {
            "file": "lib/p5.play.js",
            "line": 5334,
            "description": "Transforms this vector by a 2D transformation matrix.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "transform",
                    "description": "",
                    "type": "p5.Transform2D"
                }
            ],
            "return": {
                "description": "this, after the change",
                "type": "p5.Vector"
            },
            "class": "p5.Vector",
            "module": "p5.play",
            "submodule": "p5.play"
        }
    ],
    "warnings": []
}